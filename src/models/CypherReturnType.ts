/* tslint:disable */
/* eslint-disable */
/**
 * System REST API
 *  This page provides documentation for the System REST API.  If you have any questions or need support, please contact us at the email provided.  ## Formatting query parameters  Filters should be formatted as `field:value` and use the logical OR operator `||` to specify an OR condition. (We\'ve deprecated the pipe operator for OR conditions.)   If they are numerical, they should be formatted as `field:opvalue`. Examples: - `doi:10.1234/5678||10.8765/4321` - `num_findings:>2`  Sorts should be formatted as `field:direction`. Examples: - `cited_by:desc` - `publish_date:asc`  Searches should be formatted as `field:value`. Examples: - `name:osteoporosis` 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@system.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Cypher return type.
 * @export
 */
export const CypherReturnType = {
    Records: 'records',
    Graph: 'graph'
} as const;
export type CypherReturnType = typeof CypherReturnType[keyof typeof CypherReturnType];


export function instanceOfCypherReturnType(value: any): boolean {
    for (const key in CypherReturnType) {
        if (Object.prototype.hasOwnProperty.call(CypherReturnType, key)) {
            if ((CypherReturnType as Record<string, CypherReturnType>)[key] === value) {
                return true;
            }
        }
    }
    return false;
}

export function CypherReturnTypeFromJSON(json: any): CypherReturnType {
    return CypherReturnTypeFromJSONTyped(json, false);
}

export function CypherReturnTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CypherReturnType {
    return json as CypherReturnType;
}

export function CypherReturnTypeToJSON(value?: CypherReturnType | null): any {
    return value as any;
}

