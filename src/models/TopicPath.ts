/* tslint:disable */
/* eslint-disable */
/**
 * System REST API
 *  This page provides documentation for the System REST API.  If you have any questions or need support, please contact us at the email provided.  ## Formatting query parameters  Filters should be formatted as `field:value` and use the logical OR operator `||` to specify an OR condition. (We\'ve deprecated the pipe operator for OR conditions.)   If they are numerical, they should be formatted as `field:opvalue`. Examples: - `doi:10.1234/5678||10.8765/4321` - `num_findings:>2`  Sorts should be formatted as `field:direction`. Examples: - `cited_by:desc` - `publish_date:asc`  Searches should be formatted as `field:value`. Examples: - `name:osteoporosis` 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@system.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Topic } from './Topic';
import {
    TopicFromJSON,
    TopicFromJSONTyped,
    TopicToJSON,
} from './Topic';

/**
 * Path to topic.
 * @export
 * @interface TopicPath
 */
export interface TopicPath {
    /**
     * Unique identifier of relationship.
     * @type {string}
     * @memberof TopicPath
     */
    id: string;
    /**
     * 
     * @type {number}
     * @memberof TopicPath
     */
    numFindings?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TopicPath
     */
    numStudies?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TopicPath
     */
    numSignificantFindings?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TopicPath
     */
    highestCited?: number | null;
    /**
     * 
     * @type {number}
     * @memberof TopicPath
     */
    medianEffectSize?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof TopicPath
     */
    lastUpdated?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof TopicPath
     */
    hasExperimentalTrial?: boolean | null;
    /**
     * Topic in path
     * @type {Topic}
     * @memberof TopicPath
     */
    topic: Topic;
}

/**
 * Check if a given object implements the TopicPath interface.
 */
export function instanceOfTopicPath(value: object): value is TopicPath {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('topic' in value) || value['topic'] === undefined) return false;
    return true;
}

export function TopicPathFromJSON(json: any): TopicPath {
    return TopicPathFromJSONTyped(json, false);
}

export function TopicPathFromJSONTyped(json: any, ignoreDiscriminator: boolean): TopicPath {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'numFindings': json['num_findings'] == null ? undefined : json['num_findings'],
        'numStudies': json['num_studies'] == null ? undefined : json['num_studies'],
        'numSignificantFindings': json['num_significant_findings'] == null ? undefined : json['num_significant_findings'],
        'highestCited': json['highest_cited'] == null ? undefined : json['highest_cited'],
        'medianEffectSize': json['median_effect_size'] == null ? undefined : json['median_effect_size'],
        'lastUpdated': json['last_updated'] == null ? undefined : (new Date(json['last_updated'])),
        'hasExperimentalTrial': json['has_experimental_trial'] == null ? undefined : json['has_experimental_trial'],
        'topic': TopicFromJSON(json['topic']),
    };
}

export function TopicPathToJSON(value?: TopicPath | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'num_findings': value['numFindings'],
        'num_studies': value['numStudies'],
        'num_significant_findings': value['numSignificantFindings'],
        'highest_cited': value['highestCited'],
        'median_effect_size': value['medianEffectSize'],
        'last_updated': value['lastUpdated'] == null ? undefined : ((value['lastUpdated'] as any).toISOString()),
        'has_experimental_trial': value['hasExperimentalTrial'],
        'topic': TopicToJSON(value['topic']),
    };
}

