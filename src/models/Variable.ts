/* tslint:disable */
/* eslint-disable */
/**
 * System REST API
 *  This page provides documentation for the System REST API.  If you have any questions or need support, please contact us at the email provided.  ## Formatting query parameters  Filters should be formatted as `field:value` and use the logical OR operator `||` to specify an OR condition. (We\'ve deprecated the pipe operator for OR conditions.)   If they are numerical, they should be formatted as `field:opvalue`. Examples: - `doi:10.1234/5678||10.8765/4321` - `num_findings:>2`  Sorts should be formatted as `field:direction`. Examples: - `cited_by:desc` - `publish_date:asc`  Searches should be formatted as `field:value`. Examples: - `name:osteoporosis` 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@system.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NestedResource } from './NestedResource';
import {
    NestedResourceFromJSON,
    NestedResourceFromJSONTyped,
    NestedResourceToJSON,
} from './NestedResource';

/**
 * Variable.
 * @export
 * @interface Variable
 */
export interface Variable {
    /**
     * Unique identifier
     * @type {string}
     * @memberof Variable
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Variable
     */
    name?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Variable
     */
    numStudies?: number | null;
    /**
     * 
     * @type {NestedResource}
     * @memberof Variable
     */
    topic?: NestedResource | null;
}

/**
 * Check if a given object implements the Variable interface.
 */
export function instanceOfVariable(value: object): value is Variable {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function VariableFromJSON(json: any): Variable {
    return VariableFromJSONTyped(json, false);
}

export function VariableFromJSONTyped(json: any, ignoreDiscriminator: boolean): Variable {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'numStudies': json['num_studies'] == null ? undefined : json['num_studies'],
        'topic': json['topic'] == null ? undefined : NestedResourceFromJSON(json['topic']),
    };
}

export function VariableToJSON(value?: Variable | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'num_studies': value['numStudies'],
        'topic': NestedResourceToJSON(value['topic']),
    };
}

