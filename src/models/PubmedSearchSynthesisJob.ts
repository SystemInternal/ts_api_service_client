/* tslint:disable */
/* eslint-disable */
/**
 * System REST API
 *  This page provides documentation for the System REST API.  If you have any questions or need support, please contact us at the email provided.  ## Formatting query parameters  Filters should be formatted as `field:value` and use the logical OR operator `||` to specify an OR condition. (We\'ve deprecated the pipe operator for OR conditions.)   If they are numerical, they should be formatted as `field:opvalue`. Examples: - `doi:10.1234/5678||10.8765/4321` - `num_findings:>2`  Sorts should be formatted as `field:direction`. Examples: - `cited_by:desc` - `publish_date:asc`  Searches should be formatted as `field:value`. Examples: - `name:osteoporosis` 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: api@system.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JobStatus } from './JobStatus';
import {
    JobStatusFromJSON,
    JobStatusFromJSONTyped,
    JobStatusToJSON,
} from './JobStatus';

/**
 * Pubmed search synthesis job.
 * @export
 * @interface PubmedSearchSynthesisJob
 */
export interface PubmedSearchSynthesisJob {
    /**
     * Unique identifier of a Pubmed search synthesis job
     * @type {string}
     * @memberof PubmedSearchSynthesisJob
     */
    id: string;
    /**
     * Status of job
     * @type {JobStatus}
     * @memberof PubmedSearchSynthesisJob
     */
    status: JobStatus;
    /**
     * Date job was created
     * @type {Date}
     * @memberof PubmedSearchSynthesisJob
     */
    createdAt: Date;
    /**
     * Date job was last updated
     * @type {Date}
     * @memberof PubmedSearchSynthesisJob
     */
    updatedAt: Date;
    /**
     * Initial user query
     * @type {string}
     * @memberof PubmedSearchSynthesisJob
     */
    userQuery: string;
    /**
     * Pubmed query used for synthesis
     * @type {string}
     * @memberof PubmedSearchSynthesisJob
     */
    pubmedQuery: string;
    /**
     * Translation of pubmed query from the pubmed api
     * @type {string}
     * @memberof PubmedSearchSynthesisJob
     */
    pubmedQueryTranslation?: string;
    /**
     * Number of results from pubmed query
     * @type {number}
     * @memberof PubmedSearchSynthesisJob
     */
    numPubmedResults?: number;
    /**
     * 
     * @type {Date}
     * @memberof PubmedSearchSynthesisJob
     */
    clusteringFinished?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof PubmedSearchSynthesisJob
     */
    synthesisFinished?: Date | null;
}

/**
 * Check if a given object implements the PubmedSearchSynthesisJob interface.
 */
export function instanceOfPubmedSearchSynthesisJob(value: object): value is PubmedSearchSynthesisJob {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('userQuery' in value) || value['userQuery'] === undefined) return false;
    if (!('pubmedQuery' in value) || value['pubmedQuery'] === undefined) return false;
    return true;
}

export function PubmedSearchSynthesisJobFromJSON(json: any): PubmedSearchSynthesisJob {
    return PubmedSearchSynthesisJobFromJSONTyped(json, false);
}

export function PubmedSearchSynthesisJobFromJSONTyped(json: any, ignoreDiscriminator: boolean): PubmedSearchSynthesisJob {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'status': JobStatusFromJSON(json['status']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'userQuery': json['user_query'],
        'pubmedQuery': json['pubmed_query'],
        'pubmedQueryTranslation': json['pubmed_query_translation'] == null ? undefined : json['pubmed_query_translation'],
        'numPubmedResults': json['num_pubmed_results'] == null ? undefined : json['num_pubmed_results'],
        'clusteringFinished': json['clustering_finished'] == null ? undefined : (new Date(json['clustering_finished'])),
        'synthesisFinished': json['synthesis_finished'] == null ? undefined : (new Date(json['synthesis_finished'])),
    };
}

export function PubmedSearchSynthesisJobToJSON(value?: PubmedSearchSynthesisJob | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'status': JobStatusToJSON(value['status']),
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'user_query': value['userQuery'],
        'pubmed_query': value['pubmedQuery'],
        'pubmed_query_translation': value['pubmedQueryTranslation'],
        'num_pubmed_results': value['numPubmedResults'],
        'clustering_finished': value['clusteringFinished'] == null ? undefined : ((value['clusteringFinished'] as any).toISOString()),
        'synthesis_finished': value['synthesisFinished'] == null ? undefined : ((value['synthesisFinished'] as any).toISOString()),
    };
}

